{"componentChunkName":"component---src-templates-blog-post-js","path":"/hex-rgb-convertor/","result":{"data":{"site":{"siteMetadata":{"title":"Abel L. Mbula"}},"markdownRemark":{"id":"f843515c-089b-5248-96c5-e47243130bf3","excerpt":"With just a little knowledge of HTML, CSS, and JavaScript (JS), you can create something really great. This tutorial aims to showcase how you can combine your…","html":"<p>With just a little knowledge of HTML, CSS, and JavaScript (JS), you can create something really great. This tutorial aims to showcase how you can combine your knowledge of these three languages and build a functional app. </p>\n<h2>What are we building?</h2>\n<p>As you may have read in the title, the app you’ll build at the end of this lesson takes a hex (short for hexadecimal) color (e.g <strong>#457a7a</strong>) as input and returns an rgb equivalent as output (<strong>rgb(69,122,122)</strong>). </p>\n<p>Let call our app <strong>RGBizer App</strong>. As a bonus feature, the submitted color will be the background color on the right side of the page, and as the color for the RGB text. </p>\n<p>You can see the finished app <a href=\"https://codepen.io/bam92/pen/QWwOMYR\"><div><iframe \n        height='400' \n        scrolling='no' \n        src='//codepen.io/bam92/embed/preview/QWwOMYR/?height=400&theme-id=dark&default-tab=html,result' \n        frameborder='no' \n        allowtransparency='true' \n        allowfullscreen='true' \n        style='width: 100%;'></iframe></div></a>.</p>\n<p>We will be building our app in two parts. This is the first one, and it is focusing on HTML and CSS.</p>\n<h2>The Basic Formula</h2>\n<p>It all starts with the HTML.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>main-child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Color Hex to RGB convertor<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Enter the hexadecimal code of your favarite color in the box below to get rgb() equivalente<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      \n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hex-code<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>#<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Enter hex code without #<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hex-code<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hex-code<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Convert<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>wrapper-rgb<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>RGB color is <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>rgb<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>preview<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>main-child<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>This is your color preview<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>We create a simple form with an input where the user can enter the hex code, and a submit button to start conversion. A hex color always starts with <strong>#</strong>, so no need to enter it, and has six symbols in the range [0-9a-f].</p>\n<p>The output will be printed in the <code class=\"language-text\">span</code> element above after the user has submitted the form.</p>\n<h2>The Style with CSS Flex</h2>\n<p>Let’s start by the body:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">box-sizing</span><span class=\"token punctuation\">:</span> border-box<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We use <code class=\"language-text\">box-sizing: border-box</code> because it  makes it much easier to size elements. <code class=\"language-text\">margin: 0</code> let us occupy the whole viewpoint.</p>\n<p>Next, we style <code class=\"language-text\">main</code> element as a flex container with a height of <code class=\"language-text\">45em</code>  as this…</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">main</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>    \n      <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 47em<span class=\"token punctuation\">;</span>                                \n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>…so that we have two flex items placed in the horizontal axis (row).</p>\n<p>In order to let us easily center content horizontally and vertically, we make our two flex items flex containers:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.main-child</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span> \n  <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> column<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 50%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The content is aligned in the column (<code class=\"language-text\">flex-direction: column</code>) and occupy all available space in <code class=\"language-text\">height</code> and half of it in <code class=\"language-text\">width</code>. To center horizontally we use <code class=\"language-text\">justify-content: center</code> and <code class=\"language-text\">align-items: center</code> is used to center vertically. We can add <code class=\"language-text\">background: green</code> to the second bloc just to distinguish our two blocs, and have in mind that we will be applying background color there every time the user submit a color.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.main-child:last-child</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> green<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>For the text in the <code class=\"language-text\">.main-child:last-child</code>, let’s use <code class=\"language-text\">floralwhite</code> for the color:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.main-child:last-child p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> floralwhite<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To finish, let’s add some style to the <code class=\"language-text\">:first-child</code> of <code class=\"language-text\">.main-child</code> class.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.main-child:first-child input[type=\"text\"]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 25em<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.output</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">visibility</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">#rgb</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Nothing tricky here. We have modified a bit our markup to add <code class=\"language-text\">.output</code> class to the <code class=\"language-text\">div</code> element so that we hide it.</p>\n<h2>Conclusion</h2>\n<p>In this first part of our tutorial, we have defined the markup of our app (do you remember it name? <strong>RGBizer</strong>). To style it we used CSS flexbox. In the second and last part of this tutorial, you will learn how to make it functional with JavaScript. You can see this state of our app here <a href=\"https://codepen.io/bam92/pen/BayrRZV\"><div><iframe \n        height='400' \n        scrolling='no' \n        src='//codepen.io/bam92/embed/preview/BayrRZV/?height=400&theme-id=dark&default-tab=html,result' \n        frameborder='no' \n        allowtransparency='true' \n        allowfullscreen='true' \n        style='width: 100%;'></iframe></div></a>.</p>\n<p>Before you go, thank you for reading. If you found this interesting don’t hesitate to share with friends.</p>\n<p>Happy hacking!</p>","frontmatter":{"title":"Create a Hex to RGB Convertor App with HTML, CSS, and JavaScript (1/2)","date":"December 31, 2019","description":"Combine your HTML, CSS, and JavaScript knowledge to build a useful app."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/hex-rgb-convertor/","previous":{"fields":{"slug":"/fcc-dna-pairing/"},"frontmatter":{"title":"Five Ways to Solve the DNA Pairing Challenge in JavaScript"}},"next":{"fields":{"slug":"/css-hiden-vs-none/"},"frontmatter":{"title":"Understanding CSS: visibility hidden vs display none"}}}}}